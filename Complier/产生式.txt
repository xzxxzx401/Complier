programstruct -> program_head;program_body.
program_head -> program id
program_body -> const_declarations var_declarations subprogram_declarations compound_statement
const_declarations -> const const_declaration;
const_declarations -> epsilon
const_declaration -> const_declaration;id=const_value
const_declaration -> id=const_value
const_value -> + num
const_value -> - num
const_value -> num
var_declarations -> var var_declaration ;
var_declarations -> epsilon
var_declaration -> var_declaration ; idlist : type
var_declaration -> idlist : type
idlist -> idlist , id
idlist -> id
type->simple_type
type->array [ period ] of simple_type
simple_type->integer
simple_type -> real
simple_type -> boolean
simple_type -> char
period -> period, digits .. digits
period -> digits .. digits
subprogram_declarations -> subprogram_declarations subprogram ;
subprogram_declarations -> epsilon
subprogram -> subprogram_head ; subprogram_body
subprogram_head -> procedure id formal_parameter
subprogram_head -> function id formal_parameter : simple_type
formal_parameter -> ( parameter_list )
formal_parameter -> epsilon
parameter_list -> parameter_list ; parameter
parameter_list -> parameter
parameter -> var_parameter
parameter -> value_parameter
var_parameter -> var value_parameter
value_parameter -> idlist : simple_type
subprogram_body -> const_declarations var_declarations compound_statement
compound_statement -> begin statement_list end
statement_list -> statement_list ; statement
statement_list -> statement
statement -> variable assignop expression
statement -> procedure_call
statement -> compound_statement
statement -> if expression then statement else_part
statement -> for id assignop expression to expression do statement
statement -> epsilon
variable -> id id_varpart
id_varpart -> [ expression_list ]
id_varpart -> epsilon
procedure_call -> id
procedure_call -> id ( expression_list )
else_part -> else statement
else_part -> epsilon
expression_list -> expression_list , expression
expression_list -> expression
expression -> simple_expression relop simple_expression
expression -> simple_expression
simple_expression -> simple_expression addop term
simple_expression -> term
term -> term mulop factor
term -> factor
factor -> num
factor -> variable
factor -> id ( expression_list )
factor -> ( expression )
factor -> not factor
factor -> uminus factor