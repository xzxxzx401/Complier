State 139 conflicts: 1 shift/reduce


Grammar

    0 $accept: programstruct $end

    1 programstruct: program_head ';' program_body '.'

    2 program_head: PROGRAM ID

    3 program_body: const_declarations var_declarations subprogram_declarations compound_statement

    4 const_declarations: CONST const_declaration ';'
    5                   | /* empty */

    6 const_declaration: const_declaration ';' ID EQU const_value
    7                  | ID EQU const_value

    8 const_value: ADD NUM
    9            | SUB NUM
   10            | NUM

   11 var_declarations: VAR var_declaration ';'
   12                 | /* empty */

   13 var_declaration: var_declaration ';' idlist ':' type
   14                | idlist ':' type

   15 idlist: idlist ',' ID
   16       | ID

   17 type: simple_type
   18     | ARRAY '[' period ']' OF simple_type

   19 simple_type: INTEGER
   20            | REAL
   21            | BOOLEAN
   22            | CHAR

   23 period: period ',' NUM DOTDOT NUM
   24       | NUM DOTDOT NUM

   25 subprogram_declarations: subprogram_declarations subprogram ';'
   26                        | /* empty */

   27 subprogram: subprogram_head ';' subprogram_body

   28 subprogram_head: PROCEDURE ID formal_parameter
   29                | FUNCTION ID formal_parameter ':' simple_type

   30 formal_parameter: '(' parameter_list ')'
   31                 | /* empty */

   32 parameter_list: parameter_list ';' parameter
   33               | parameter

   34 parameter: var_parameter
   35          | value_parameter

   36 var_parameter: VAR value_parameter

   37 value_parameter: idlist ':' simple_type

   38 subprogram_body: const_declarations var_declarations compound_statement

   39 compound_statement: BEGIN statement_list END

   40 statement_list: statement_list ';' statement
   41               | statement

   42 statement: variable ASSIGNOP expression
   43          | procedure_call
   44          | compound_statement
   45          | IF expression THEN statement else_part
   46          | FOR ID ASSIGNOP expression TO expression DO statement
   47          | /* empty */
   48          | error

   49 variable: ID id_varpart

   50 id_varpart: '[' expression_list ']'
   51           | /* empty */

   52 procedure_call: ID
   53               | ID '(' expression_list ')'
   54               | ID '(' error ')'

   55 else_part: ELSE statement
   56          | /* empty */

   57 expression_list: expression_list ',' expression
   58                | expression

   59 expression: simple_expression EQU simple_expression
   60           | simple_expression NEQU simple_expression
   61           | simple_expression GRETTER simple_expression
   62           | simple_expression EGRETTER simple_expression
   63           | simple_expression LESS simple_expression
   64           | simple_expression ELESS simple_expression
   65           | simple_expression

   66 simple_expression: simple_expression ADD term
   67                  | simple_expression OR term
   68                  | simple_expression SUB term
   69                  | term

   70 term: term MUL factor
   71     | term DIV factor
   72     | term IDIV factor
   73     | term AND factor
   74     | term MOD factor
   75     | factor

   76 factor: NUM
   77       | variable
   78       | ID '(' expression_list ')'
   79       | ID '(' error ')'
   80       | '(' expression ')'
   81       | '(' error ')'
   82       | NOT factor
   83       | SUB factor


Terminals, with rules where they appear

$end (0) 0
'(' (40) 30 53 54 78 79 80 81
')' (41) 30 53 54 78 79 80 81
',' (44) 15 23 57
'.' (46) 1
':' (58) 13 14 29 37
';' (59) 1 4 6 11 13 25 27 32 40
'[' (91) 18 50
']' (93) 18 50
error (256) 48 54 79 81
EQU (258) 6 7 59
NEQU (259) 60
GRETTER (260) 61
EGRETTER (261) 62
LESS (262) 63
ELESS (263) 64
ASSIGNOP (264) 42 46
ADD (265) 8 66
SUB (266) 9 68 83
MUL (267) 70
DIV (268) 71
IDIV (269) 72
AND (270) 73
OR (271) 67
MOD (272) 74
NUM (273) 8 9 10 23 24 76
ID (274) 2 6 7 15 16 28 29 46 49 52 53 54 78 79
PROGRAM (275) 2
CONST (276) 4
VAR (277) 11 36
PROCEDURE (278) 28
FUNCTION (279) 29
BEGIN (280) 39
END (281) 39
ARRAY (282) 18
OF (283) 18
IF (284) 45
THEN (285) 45
ELSE (286) 55
FOR (287) 46
TO (288) 46
DO (289) 46
INTEGER (290) 19
BOOLEAN (291) 21
REAL (292) 20
CHAR (293) 22
DOTDOT (294) 23 24
NOT (295) 82


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
programstruct (50)
    on left: 1, on right: 0
program_head (51)
    on left: 2, on right: 1
program_body (52)
    on left: 3, on right: 1
const_declarations (53)
    on left: 4 5, on right: 3 38
const_declaration (54)
    on left: 6 7, on right: 4 6
const_value (55)
    on left: 8 9 10, on right: 6 7
var_declarations (56)
    on left: 11 12, on right: 3 38
var_declaration (57)
    on left: 13 14, on right: 11 13
idlist (58)
    on left: 15 16, on right: 13 14 15 37
type (59)
    on left: 17 18, on right: 13 14
simple_type (60)
    on left: 19 20 21 22, on right: 17 18 29 37
period (61)
    on left: 23 24, on right: 18 23
subprogram_declarations (62)
    on left: 25 26, on right: 3 25
subprogram (63)
    on left: 27, on right: 25
subprogram_head (64)
    on left: 28 29, on right: 27
formal_parameter (65)
    on left: 30 31, on right: 28 29
parameter_list (66)
    on left: 32 33, on right: 30 32
parameter (67)
    on left: 34 35, on right: 32 33
var_parameter (68)
    on left: 36, on right: 34
value_parameter (69)
    on left: 37, on right: 35 36
subprogram_body (70)
    on left: 38, on right: 27
compound_statement (71)
    on left: 39, on right: 3 38 44
statement_list (72)
    on left: 40 41, on right: 39 40
statement (73)
    on left: 42 43 44 45 46 47 48, on right: 40 41 45 46 55
variable (74)
    on left: 49, on right: 42 77
id_varpart (75)
    on left: 50 51, on right: 49
procedure_call (76)
    on left: 52 53 54, on right: 43
else_part (77)
    on left: 55 56, on right: 45
expression_list (78)
    on left: 57 58, on right: 50 53 57 78
expression (79)
    on left: 59 60 61 62 63 64 65, on right: 42 45 46 57 58 80
simple_expression (80)
    on left: 66 67 68 69, on right: 59 60 61 62 63 64 65 66 67 68
term (81)
    on left: 70 71 72 73 74 75, on right: 66 67 68 69 70 71 72 73 74
factor (82)
    on left: 76 77 78 79 80 81 82 83, on right: 70 71 72 73 74 75 82
    83


state 0

    0 $accept: . programstruct $end

    PROGRAM  shift, and go to state 1

    programstruct  go to state 2
    program_head   go to state 3


state 1

    2 program_head: PROGRAM . ID

    ID  shift, and go to state 4


state 2

    0 $accept: programstruct . $end

    $end  shift, and go to state 5


state 3

    1 programstruct: program_head . ';' program_body '.'

    ';'  shift, and go to state 6


state 4

    2 program_head: PROGRAM ID .

    $default  reduce using rule 2 (program_head)


state 5

    0 $accept: programstruct $end .

    $default  accept


state 6

    1 programstruct: program_head ';' . program_body '.'

    CONST  shift, and go to state 7

    $default  reduce using rule 5 (const_declarations)

    program_body        go to state 8
    const_declarations  go to state 9


state 7

    4 const_declarations: CONST . const_declaration ';'

    ID  shift, and go to state 10

    const_declaration  go to state 11


state 8

    1 programstruct: program_head ';' program_body . '.'

    '.'  shift, and go to state 12


state 9

    3 program_body: const_declarations . var_declarations subprogram_declarations compound_statement

    VAR  shift, and go to state 13

    $default  reduce using rule 12 (var_declarations)

    var_declarations  go to state 14


state 10

    7 const_declaration: ID . EQU const_value

    EQU  shift, and go to state 15


state 11

    4 const_declarations: CONST const_declaration . ';'
    6 const_declaration: const_declaration . ';' ID EQU const_value

    ';'  shift, and go to state 16


state 12

    1 programstruct: program_head ';' program_body '.' .

    $default  reduce using rule 1 (programstruct)


state 13

   11 var_declarations: VAR . var_declaration ';'

    ID  shift, and go to state 17

    var_declaration  go to state 18
    idlist           go to state 19


state 14

    3 program_body: const_declarations var_declarations . subprogram_declarations compound_statement

    $default  reduce using rule 26 (subprogram_declarations)

    subprogram_declarations  go to state 20


state 15

    7 const_declaration: ID EQU . const_value

    ADD  shift, and go to state 21
    SUB  shift, and go to state 22
    NUM  shift, and go to state 23

    const_value  go to state 24


state 16

    4 const_declarations: CONST const_declaration ';' .
    6 const_declaration: const_declaration ';' . ID EQU const_value

    ID  shift, and go to state 25

    $default  reduce using rule 4 (const_declarations)


state 17

   16 idlist: ID .

    $default  reduce using rule 16 (idlist)


state 18

   11 var_declarations: VAR var_declaration . ';'
   13 var_declaration: var_declaration . ';' idlist ':' type

    ';'  shift, and go to state 26


state 19

   14 var_declaration: idlist . ':' type
   15 idlist: idlist . ',' ID

    ':'  shift, and go to state 27
    ','  shift, and go to state 28


state 20

    3 program_body: const_declarations var_declarations subprogram_declarations . compound_statement
   25 subprogram_declarations: subprogram_declarations . subprogram ';'

    PROCEDURE  shift, and go to state 29
    FUNCTION   shift, and go to state 30
    BEGIN      shift, and go to state 31

    subprogram          go to state 32
    subprogram_head     go to state 33
    compound_statement  go to state 34


state 21

    8 const_value: ADD . NUM

    NUM  shift, and go to state 35


state 22

    9 const_value: SUB . NUM

    NUM  shift, and go to state 36


state 23

   10 const_value: NUM .

    $default  reduce using rule 10 (const_value)


state 24

    7 const_declaration: ID EQU const_value .

    $default  reduce using rule 7 (const_declaration)


state 25

    6 const_declaration: const_declaration ';' ID . EQU const_value

    EQU  shift, and go to state 37


state 26

   11 var_declarations: VAR var_declaration ';' .
   13 var_declaration: var_declaration ';' . idlist ':' type

    ID  shift, and go to state 17

    $default  reduce using rule 11 (var_declarations)

    idlist  go to state 38


state 27

   14 var_declaration: idlist ':' . type

    ARRAY    shift, and go to state 39
    INTEGER  shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    REAL     shift, and go to state 42
    CHAR     shift, and go to state 43

    type         go to state 44
    simple_type  go to state 45


state 28

   15 idlist: idlist ',' . ID

    ID  shift, and go to state 46


state 29

   28 subprogram_head: PROCEDURE . ID formal_parameter

    ID  shift, and go to state 47


state 30

   29 subprogram_head: FUNCTION . ID formal_parameter ':' simple_type

    ID  shift, and go to state 48


state 31

   39 compound_statement: BEGIN . statement_list END

    error  shift, and go to state 49
    ID     shift, and go to state 50
    BEGIN  shift, and go to state 31
    IF     shift, and go to state 51
    FOR    shift, and go to state 52

    END  reduce using rule 47 (statement)
    ';'  reduce using rule 47 (statement)

    compound_statement  go to state 53
    statement_list      go to state 54
    statement           go to state 55
    variable            go to state 56
    procedure_call      go to state 57


state 32

   25 subprogram_declarations: subprogram_declarations subprogram . ';'

    ';'  shift, and go to state 58


state 33

   27 subprogram: subprogram_head . ';' subprogram_body

    ';'  shift, and go to state 59


state 34

    3 program_body: const_declarations var_declarations subprogram_declarations compound_statement .

    $default  reduce using rule 3 (program_body)


state 35

    8 const_value: ADD NUM .

    $default  reduce using rule 8 (const_value)


state 36

    9 const_value: SUB NUM .

    $default  reduce using rule 9 (const_value)


state 37

    6 const_declaration: const_declaration ';' ID EQU . const_value

    ADD  shift, and go to state 21
    SUB  shift, and go to state 22
    NUM  shift, and go to state 23

    const_value  go to state 60


state 38

   13 var_declaration: var_declaration ';' idlist . ':' type
   15 idlist: idlist . ',' ID

    ':'  shift, and go to state 61
    ','  shift, and go to state 28


state 39

   18 type: ARRAY . '[' period ']' OF simple_type

    '['  shift, and go to state 62


state 40

   19 simple_type: INTEGER .

    $default  reduce using rule 19 (simple_type)


state 41

   21 simple_type: BOOLEAN .

    $default  reduce using rule 21 (simple_type)


state 42

   20 simple_type: REAL .

    $default  reduce using rule 20 (simple_type)


state 43

   22 simple_type: CHAR .

    $default  reduce using rule 22 (simple_type)


state 44

   14 var_declaration: idlist ':' type .

    $default  reduce using rule 14 (var_declaration)


state 45

   17 type: simple_type .

    $default  reduce using rule 17 (type)


state 46

   15 idlist: idlist ',' ID .

    $default  reduce using rule 15 (idlist)


state 47

   28 subprogram_head: PROCEDURE ID . formal_parameter

    '('  shift, and go to state 63

    $default  reduce using rule 31 (formal_parameter)

    formal_parameter  go to state 64


state 48

   29 subprogram_head: FUNCTION ID . formal_parameter ':' simple_type

    '('  shift, and go to state 63

    $default  reduce using rule 31 (formal_parameter)

    formal_parameter  go to state 65


state 49

   48 statement: error .

    $default  reduce using rule 48 (statement)


state 50

   49 variable: ID . id_varpart
   52 procedure_call: ID .
   53               | ID . '(' expression_list ')'
   54               | ID . '(' error ')'

    '['  shift, and go to state 66
    '('  shift, and go to state 67

    ASSIGNOP  reduce using rule 51 (id_varpart)
    $default  reduce using rule 52 (procedure_call)

    id_varpart  go to state 68


state 51

   45 statement: IF . expression THEN statement else_part

    SUB  shift, and go to state 69
    NUM  shift, and go to state 70
    ID   shift, and go to state 71
    NOT  shift, and go to state 72
    '('  shift, and go to state 73

    variable           go to state 74
    expression         go to state 75
    simple_expression  go to state 76
    term               go to state 77
    factor             go to state 78


state 52

   46 statement: FOR . ID ASSIGNOP expression TO expression DO statement

    ID  shift, and go to state 79


state 53

   44 statement: compound_statement .

    $default  reduce using rule 44 (statement)


state 54

   39 compound_statement: BEGIN statement_list . END
   40 statement_list: statement_list . ';' statement

    END  shift, and go to state 80
    ';'  shift, and go to state 81


state 55

   41 statement_list: statement .

    $default  reduce using rule 41 (statement_list)


state 56

   42 statement: variable . ASSIGNOP expression

    ASSIGNOP  shift, and go to state 82


state 57

   43 statement: procedure_call .

    $default  reduce using rule 43 (statement)


state 58

   25 subprogram_declarations: subprogram_declarations subprogram ';' .

    $default  reduce using rule 25 (subprogram_declarations)


state 59

   27 subprogram: subprogram_head ';' . subprogram_body

    CONST  shift, and go to state 7

    $default  reduce using rule 5 (const_declarations)

    const_declarations  go to state 83
    subprogram_body     go to state 84


state 60

    6 const_declaration: const_declaration ';' ID EQU const_value .

    $default  reduce using rule 6 (const_declaration)


state 61

   13 var_declaration: var_declaration ';' idlist ':' . type

    ARRAY    shift, and go to state 39
    INTEGER  shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    REAL     shift, and go to state 42
    CHAR     shift, and go to state 43

    type         go to state 85
    simple_type  go to state 45


state 62

   18 type: ARRAY '[' . period ']' OF simple_type

    NUM  shift, and go to state 86

    period  go to state 87


state 63

   30 formal_parameter: '(' . parameter_list ')'

    ID   shift, and go to state 17
    VAR  shift, and go to state 88

    idlist           go to state 89
    parameter_list   go to state 90
    parameter        go to state 91
    var_parameter    go to state 92
    value_parameter  go to state 93


state 64

   28 subprogram_head: PROCEDURE ID formal_parameter .

    $default  reduce using rule 28 (subprogram_head)


state 65

   29 subprogram_head: FUNCTION ID formal_parameter . ':' simple_type

    ':'  shift, and go to state 94


state 66

   50 id_varpart: '[' . expression_list ']'

    SUB  shift, and go to state 69
    NUM  shift, and go to state 70
    ID   shift, and go to state 71
    NOT  shift, and go to state 72
    '('  shift, and go to state 73

    variable           go to state 74
    expression_list    go to state 95
    expression         go to state 96
    simple_expression  go to state 76
    term               go to state 77
    factor             go to state 78


state 67

   53 procedure_call: ID '(' . expression_list ')'
   54               | ID '(' . error ')'

    error  shift, and go to state 97
    SUB    shift, and go to state 69
    NUM    shift, and go to state 70
    ID     shift, and go to state 71
    NOT    shift, and go to state 72
    '('    shift, and go to state 73

    variable           go to state 74
    expression_list    go to state 98
    expression         go to state 96
    simple_expression  go to state 76
    term               go to state 77
    factor             go to state 78


state 68

   49 variable: ID id_varpart .

    $default  reduce using rule 49 (variable)


state 69

   83 factor: SUB . factor

    SUB  shift, and go to state 69
    NUM  shift, and go to state 70
    ID   shift, and go to state 71
    NOT  shift, and go to state 72
    '('  shift, and go to state 73

    variable  go to state 74
    factor    go to state 99


state 70

   76 factor: NUM .

    $default  reduce using rule 76 (factor)


state 71

   49 variable: ID . id_varpart
   78 factor: ID . '(' expression_list ')'
   79       | ID . '(' error ')'

    '['  shift, and go to state 66
    '('  shift, and go to state 100

    $default  reduce using rule 51 (id_varpart)

    id_varpart  go to state 68


state 72

   82 factor: NOT . factor

    SUB  shift, and go to state 69
    NUM  shift, and go to state 70
    ID   shift, and go to state 71
    NOT  shift, and go to state 72
    '('  shift, and go to state 73

    variable  go to state 74
    factor    go to state 101


state 73

   80 factor: '(' . expression ')'
   81       | '(' . error ')'

    error  shift, and go to state 102
    SUB    shift, and go to state 69
    NUM    shift, and go to state 70
    ID     shift, and go to state 71
    NOT    shift, and go to state 72
    '('    shift, and go to state 73

    variable           go to state 74
    expression         go to state 103
    simple_expression  go to state 76
    term               go to state 77
    factor             go to state 78


state 74

   77 factor: variable .

    $default  reduce using rule 77 (factor)


state 75

   45 statement: IF expression . THEN statement else_part

    THEN  shift, and go to state 104


state 76

   59 expression: simple_expression . EQU simple_expression
   60           | simple_expression . NEQU simple_expression
   61           | simple_expression . GRETTER simple_expression
   62           | simple_expression . EGRETTER simple_expression
   63           | simple_expression . LESS simple_expression
   64           | simple_expression . ELESS simple_expression
   65           | simple_expression .
   66 simple_expression: simple_expression . ADD term
   67                  | simple_expression . OR term
   68                  | simple_expression . SUB term

    EQU       shift, and go to state 105
    NEQU      shift, and go to state 106
    GRETTER   shift, and go to state 107
    EGRETTER  shift, and go to state 108
    LESS      shift, and go to state 109
    ELESS     shift, and go to state 110
    ADD       shift, and go to state 111
    SUB       shift, and go to state 112
    OR        shift, and go to state 113

    $default  reduce using rule 65 (expression)


state 77

   69 simple_expression: term .
   70 term: term . MUL factor
   71     | term . DIV factor
   72     | term . IDIV factor
   73     | term . AND factor
   74     | term . MOD factor

    MUL   shift, and go to state 114
    DIV   shift, and go to state 115
    IDIV  shift, and go to state 116
    AND   shift, and go to state 117
    MOD   shift, and go to state 118

    $default  reduce using rule 69 (simple_expression)


state 78

   75 term: factor .

    $default  reduce using rule 75 (term)


state 79

   46 statement: FOR ID . ASSIGNOP expression TO expression DO statement

    ASSIGNOP  shift, and go to state 119


state 80

   39 compound_statement: BEGIN statement_list END .

    $default  reduce using rule 39 (compound_statement)


state 81

   40 statement_list: statement_list ';' . statement

    error  shift, and go to state 49
    ID     shift, and go to state 50
    BEGIN  shift, and go to state 31
    IF     shift, and go to state 51
    FOR    shift, and go to state 52

    END  reduce using rule 47 (statement)
    ';'  reduce using rule 47 (statement)

    compound_statement  go to state 53
    statement           go to state 120
    variable            go to state 56
    procedure_call      go to state 57


state 82

   42 statement: variable ASSIGNOP . expression

    SUB  shift, and go to state 69
    NUM  shift, and go to state 70
    ID   shift, and go to state 71
    NOT  shift, and go to state 72
    '('  shift, and go to state 73

    variable           go to state 74
    expression         go to state 121
    simple_expression  go to state 76
    term               go to state 77
    factor             go to state 78


state 83

   38 subprogram_body: const_declarations . var_declarations compound_statement

    VAR  shift, and go to state 13

    $default  reduce using rule 12 (var_declarations)

    var_declarations  go to state 122


state 84

   27 subprogram: subprogram_head ';' subprogram_body .

    $default  reduce using rule 27 (subprogram)


state 85

   13 var_declaration: var_declaration ';' idlist ':' type .

    $default  reduce using rule 13 (var_declaration)


state 86

   24 period: NUM . DOTDOT NUM

    DOTDOT  shift, and go to state 123


state 87

   18 type: ARRAY '[' period . ']' OF simple_type
   23 period: period . ',' NUM DOTDOT NUM

    ','  shift, and go to state 124
    ']'  shift, and go to state 125


state 88

   36 var_parameter: VAR . value_parameter

    ID  shift, and go to state 17

    idlist           go to state 89
    value_parameter  go to state 126


state 89

   15 idlist: idlist . ',' ID
   37 value_parameter: idlist . ':' simple_type

    ':'  shift, and go to state 127
    ','  shift, and go to state 28


state 90

   30 formal_parameter: '(' parameter_list . ')'
   32 parameter_list: parameter_list . ';' parameter

    ';'  shift, and go to state 128
    ')'  shift, and go to state 129


state 91

   33 parameter_list: parameter .

    $default  reduce using rule 33 (parameter_list)


state 92

   34 parameter: var_parameter .

    $default  reduce using rule 34 (parameter)


state 93

   35 parameter: value_parameter .

    $default  reduce using rule 35 (parameter)


state 94

   29 subprogram_head: FUNCTION ID formal_parameter ':' . simple_type

    INTEGER  shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    REAL     shift, and go to state 42
    CHAR     shift, and go to state 43

    simple_type  go to state 130


state 95

   50 id_varpart: '[' expression_list . ']'
   57 expression_list: expression_list . ',' expression

    ','  shift, and go to state 131
    ']'  shift, and go to state 132


state 96

   58 expression_list: expression .

    $default  reduce using rule 58 (expression_list)


state 97

   54 procedure_call: ID '(' error . ')'

    ')'  shift, and go to state 133


state 98

   53 procedure_call: ID '(' expression_list . ')'
   57 expression_list: expression_list . ',' expression

    ','  shift, and go to state 131
    ')'  shift, and go to state 134


state 99

   83 factor: SUB factor .

    $default  reduce using rule 83 (factor)


state 100

   78 factor: ID '(' . expression_list ')'
   79       | ID '(' . error ')'

    error  shift, and go to state 135
    SUB    shift, and go to state 69
    NUM    shift, and go to state 70
    ID     shift, and go to state 71
    NOT    shift, and go to state 72
    '('    shift, and go to state 73

    variable           go to state 74
    expression_list    go to state 136
    expression         go to state 96
    simple_expression  go to state 76
    term               go to state 77
    factor             go to state 78


state 101

   82 factor: NOT factor .

    $default  reduce using rule 82 (factor)


state 102

   81 factor: '(' error . ')'

    ')'  shift, and go to state 137


state 103

   80 factor: '(' expression . ')'

    ')'  shift, and go to state 138


state 104

   45 statement: IF expression THEN . statement else_part

    error  shift, and go to state 49
    ID     shift, and go to state 50
    BEGIN  shift, and go to state 31
    IF     shift, and go to state 51
    FOR    shift, and go to state 52

    END   reduce using rule 47 (statement)
    ELSE  reduce using rule 47 (statement)
    ';'   reduce using rule 47 (statement)

    compound_statement  go to state 53
    statement           go to state 139
    variable            go to state 56
    procedure_call      go to state 57


state 105

   59 expression: simple_expression EQU . simple_expression

    SUB  shift, and go to state 69
    NUM  shift, and go to state 70
    ID   shift, and go to state 71
    NOT  shift, and go to state 72
    '('  shift, and go to state 73

    variable           go to state 74
    simple_expression  go to state 140
    term               go to state 77
    factor             go to state 78


state 106

   60 expression: simple_expression NEQU . simple_expression

    SUB  shift, and go to state 69
    NUM  shift, and go to state 70
    ID   shift, and go to state 71
    NOT  shift, and go to state 72
    '('  shift, and go to state 73

    variable           go to state 74
    simple_expression  go to state 141
    term               go to state 77
    factor             go to state 78


state 107

   61 expression: simple_expression GRETTER . simple_expression

    SUB  shift, and go to state 69
    NUM  shift, and go to state 70
    ID   shift, and go to state 71
    NOT  shift, and go to state 72
    '('  shift, and go to state 73

    variable           go to state 74
    simple_expression  go to state 142
    term               go to state 77
    factor             go to state 78


state 108

   62 expression: simple_expression EGRETTER . simple_expression

    SUB  shift, and go to state 69
    NUM  shift, and go to state 70
    ID   shift, and go to state 71
    NOT  shift, and go to state 72
    '('  shift, and go to state 73

    variable           go to state 74
    simple_expression  go to state 143
    term               go to state 77
    factor             go to state 78


state 109

   63 expression: simple_expression LESS . simple_expression

    SUB  shift, and go to state 69
    NUM  shift, and go to state 70
    ID   shift, and go to state 71
    NOT  shift, and go to state 72
    '('  shift, and go to state 73

    variable           go to state 74
    simple_expression  go to state 144
    term               go to state 77
    factor             go to state 78


state 110

   64 expression: simple_expression ELESS . simple_expression

    SUB  shift, and go to state 69
    NUM  shift, and go to state 70
    ID   shift, and go to state 71
    NOT  shift, and go to state 72
    '('  shift, and go to state 73

    variable           go to state 74
    simple_expression  go to state 145
    term               go to state 77
    factor             go to state 78


state 111

   66 simple_expression: simple_expression ADD . term

    SUB  shift, and go to state 69
    NUM  shift, and go to state 70
    ID   shift, and go to state 71
    NOT  shift, and go to state 72
    '('  shift, and go to state 73

    variable  go to state 74
    term      go to state 146
    factor    go to state 78


state 112

   68 simple_expression: simple_expression SUB . term

    SUB  shift, and go to state 69
    NUM  shift, and go to state 70
    ID   shift, and go to state 71
    NOT  shift, and go to state 72
    '('  shift, and go to state 73

    variable  go to state 74
    term      go to state 147
    factor    go to state 78


state 113

   67 simple_expression: simple_expression OR . term

    SUB  shift, and go to state 69
    NUM  shift, and go to state 70
    ID   shift, and go to state 71
    NOT  shift, and go to state 72
    '('  shift, and go to state 73

    variable  go to state 74
    term      go to state 148
    factor    go to state 78


state 114

   70 term: term MUL . factor

    SUB  shift, and go to state 69
    NUM  shift, and go to state 70
    ID   shift, and go to state 71
    NOT  shift, and go to state 72
    '('  shift, and go to state 73

    variable  go to state 74
    factor    go to state 149


state 115

   71 term: term DIV . factor

    SUB  shift, and go to state 69
    NUM  shift, and go to state 70
    ID   shift, and go to state 71
    NOT  shift, and go to state 72
    '('  shift, and go to state 73

    variable  go to state 74
    factor    go to state 150


state 116

   72 term: term IDIV . factor

    SUB  shift, and go to state 69
    NUM  shift, and go to state 70
    ID   shift, and go to state 71
    NOT  shift, and go to state 72
    '('  shift, and go to state 73

    variable  go to state 74
    factor    go to state 151


state 117

   73 term: term AND . factor

    SUB  shift, and go to state 69
    NUM  shift, and go to state 70
    ID   shift, and go to state 71
    NOT  shift, and go to state 72
    '('  shift, and go to state 73

    variable  go to state 74
    factor    go to state 152


state 118

   74 term: term MOD . factor

    SUB  shift, and go to state 69
    NUM  shift, and go to state 70
    ID   shift, and go to state 71
    NOT  shift, and go to state 72
    '('  shift, and go to state 73

    variable  go to state 74
    factor    go to state 153


state 119

   46 statement: FOR ID ASSIGNOP . expression TO expression DO statement

    SUB  shift, and go to state 69
    NUM  shift, and go to state 70
    ID   shift, and go to state 71
    NOT  shift, and go to state 72
    '('  shift, and go to state 73

    variable           go to state 74
    expression         go to state 154
    simple_expression  go to state 76
    term               go to state 77
    factor             go to state 78


state 120

   40 statement_list: statement_list ';' statement .

    $default  reduce using rule 40 (statement_list)


state 121

   42 statement: variable ASSIGNOP expression .

    $default  reduce using rule 42 (statement)


state 122

   38 subprogram_body: const_declarations var_declarations . compound_statement

    BEGIN  shift, and go to state 31

    compound_statement  go to state 155


state 123

   24 period: NUM DOTDOT . NUM

    NUM  shift, and go to state 156


state 124

   23 period: period ',' . NUM DOTDOT NUM

    NUM  shift, and go to state 157


state 125

   18 type: ARRAY '[' period ']' . OF simple_type

    OF  shift, and go to state 158


state 126

   36 var_parameter: VAR value_parameter .

    $default  reduce using rule 36 (var_parameter)


state 127

   37 value_parameter: idlist ':' . simple_type

    INTEGER  shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    REAL     shift, and go to state 42
    CHAR     shift, and go to state 43

    simple_type  go to state 159


state 128

   32 parameter_list: parameter_list ';' . parameter

    ID   shift, and go to state 17
    VAR  shift, and go to state 88

    idlist           go to state 89
    parameter        go to state 160
    var_parameter    go to state 92
    value_parameter  go to state 93


state 129

   30 formal_parameter: '(' parameter_list ')' .

    $default  reduce using rule 30 (formal_parameter)


state 130

   29 subprogram_head: FUNCTION ID formal_parameter ':' simple_type .

    $default  reduce using rule 29 (subprogram_head)


state 131

   57 expression_list: expression_list ',' . expression

    SUB  shift, and go to state 69
    NUM  shift, and go to state 70
    ID   shift, and go to state 71
    NOT  shift, and go to state 72
    '('  shift, and go to state 73

    variable           go to state 74
    expression         go to state 161
    simple_expression  go to state 76
    term               go to state 77
    factor             go to state 78


state 132

   50 id_varpart: '[' expression_list ']' .

    $default  reduce using rule 50 (id_varpart)


state 133

   54 procedure_call: ID '(' error ')' .

    $default  reduce using rule 54 (procedure_call)


state 134

   53 procedure_call: ID '(' expression_list ')' .

    $default  reduce using rule 53 (procedure_call)


state 135

   79 factor: ID '(' error . ')'

    ')'  shift, and go to state 162


state 136

   57 expression_list: expression_list . ',' expression
   78 factor: ID '(' expression_list . ')'

    ','  shift, and go to state 131
    ')'  shift, and go to state 163


state 137

   81 factor: '(' error ')' .

    $default  reduce using rule 81 (factor)


state 138

   80 factor: '(' expression ')' .

    $default  reduce using rule 80 (factor)


state 139

   45 statement: IF expression THEN statement . else_part

    ELSE  shift, and go to state 164

    ELSE      [reduce using rule 56 (else_part)]
    $default  reduce using rule 56 (else_part)

    else_part  go to state 165


state 140

   59 expression: simple_expression EQU simple_expression .
   66 simple_expression: simple_expression . ADD term
   67                  | simple_expression . OR term
   68                  | simple_expression . SUB term

    ADD  shift, and go to state 111
    SUB  shift, and go to state 112
    OR   shift, and go to state 113

    $default  reduce using rule 59 (expression)


state 141

   60 expression: simple_expression NEQU simple_expression .
   66 simple_expression: simple_expression . ADD term
   67                  | simple_expression . OR term
   68                  | simple_expression . SUB term

    ADD  shift, and go to state 111
    SUB  shift, and go to state 112
    OR   shift, and go to state 113

    $default  reduce using rule 60 (expression)


state 142

   61 expression: simple_expression GRETTER simple_expression .
   66 simple_expression: simple_expression . ADD term
   67                  | simple_expression . OR term
   68                  | simple_expression . SUB term

    ADD  shift, and go to state 111
    SUB  shift, and go to state 112
    OR   shift, and go to state 113

    $default  reduce using rule 61 (expression)


state 143

   62 expression: simple_expression EGRETTER simple_expression .
   66 simple_expression: simple_expression . ADD term
   67                  | simple_expression . OR term
   68                  | simple_expression . SUB term

    ADD  shift, and go to state 111
    SUB  shift, and go to state 112
    OR   shift, and go to state 113

    $default  reduce using rule 62 (expression)


state 144

   63 expression: simple_expression LESS simple_expression .
   66 simple_expression: simple_expression . ADD term
   67                  | simple_expression . OR term
   68                  | simple_expression . SUB term

    ADD  shift, and go to state 111
    SUB  shift, and go to state 112
    OR   shift, and go to state 113

    $default  reduce using rule 63 (expression)


state 145

   64 expression: simple_expression ELESS simple_expression .
   66 simple_expression: simple_expression . ADD term
   67                  | simple_expression . OR term
   68                  | simple_expression . SUB term

    ADD  shift, and go to state 111
    SUB  shift, and go to state 112
    OR   shift, and go to state 113

    $default  reduce using rule 64 (expression)


state 146

   66 simple_expression: simple_expression ADD term .
   70 term: term . MUL factor
   71     | term . DIV factor
   72     | term . IDIV factor
   73     | term . AND factor
   74     | term . MOD factor

    MUL   shift, and go to state 114
    DIV   shift, and go to state 115
    IDIV  shift, and go to state 116
    AND   shift, and go to state 117
    MOD   shift, and go to state 118

    $default  reduce using rule 66 (simple_expression)


state 147

   68 simple_expression: simple_expression SUB term .
   70 term: term . MUL factor
   71     | term . DIV factor
   72     | term . IDIV factor
   73     | term . AND factor
   74     | term . MOD factor

    MUL   shift, and go to state 114
    DIV   shift, and go to state 115
    IDIV  shift, and go to state 116
    AND   shift, and go to state 117
    MOD   shift, and go to state 118

    $default  reduce using rule 68 (simple_expression)


state 148

   67 simple_expression: simple_expression OR term .
   70 term: term . MUL factor
   71     | term . DIV factor
   72     | term . IDIV factor
   73     | term . AND factor
   74     | term . MOD factor

    MUL   shift, and go to state 114
    DIV   shift, and go to state 115
    IDIV  shift, and go to state 116
    AND   shift, and go to state 117
    MOD   shift, and go to state 118

    $default  reduce using rule 67 (simple_expression)


state 149

   70 term: term MUL factor .

    $default  reduce using rule 70 (term)


state 150

   71 term: term DIV factor .

    $default  reduce using rule 71 (term)


state 151

   72 term: term IDIV factor .

    $default  reduce using rule 72 (term)


state 152

   73 term: term AND factor .

    $default  reduce using rule 73 (term)


state 153

   74 term: term MOD factor .

    $default  reduce using rule 74 (term)


state 154

   46 statement: FOR ID ASSIGNOP expression . TO expression DO statement

    TO  shift, and go to state 166


state 155

   38 subprogram_body: const_declarations var_declarations compound_statement .

    $default  reduce using rule 38 (subprogram_body)


state 156

   24 period: NUM DOTDOT NUM .

    $default  reduce using rule 24 (period)


state 157

   23 period: period ',' NUM . DOTDOT NUM

    DOTDOT  shift, and go to state 167


state 158

   18 type: ARRAY '[' period ']' OF . simple_type

    INTEGER  shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    REAL     shift, and go to state 42
    CHAR     shift, and go to state 43

    simple_type  go to state 168


state 159

   37 value_parameter: idlist ':' simple_type .

    $default  reduce using rule 37 (value_parameter)


state 160

   32 parameter_list: parameter_list ';' parameter .

    $default  reduce using rule 32 (parameter_list)


state 161

   57 expression_list: expression_list ',' expression .

    $default  reduce using rule 57 (expression_list)


state 162

   79 factor: ID '(' error ')' .

    $default  reduce using rule 79 (factor)


state 163

   78 factor: ID '(' expression_list ')' .

    $default  reduce using rule 78 (factor)


state 164

   55 else_part: ELSE . statement

    error  shift, and go to state 49
    ID     shift, and go to state 50
    BEGIN  shift, and go to state 31
    IF     shift, and go to state 51
    FOR    shift, and go to state 52

    END   reduce using rule 47 (statement)
    ELSE  reduce using rule 47 (statement)
    ';'   reduce using rule 47 (statement)

    compound_statement  go to state 53
    statement           go to state 169
    variable            go to state 56
    procedure_call      go to state 57


state 165

   45 statement: IF expression THEN statement else_part .

    $default  reduce using rule 45 (statement)


state 166

   46 statement: FOR ID ASSIGNOP expression TO . expression DO statement

    SUB  shift, and go to state 69
    NUM  shift, and go to state 70
    ID   shift, and go to state 71
    NOT  shift, and go to state 72
    '('  shift, and go to state 73

    variable           go to state 74
    expression         go to state 170
    simple_expression  go to state 76
    term               go to state 77
    factor             go to state 78


state 167

   23 period: period ',' NUM DOTDOT . NUM

    NUM  shift, and go to state 171


state 168

   18 type: ARRAY '[' period ']' OF simple_type .

    $default  reduce using rule 18 (type)


state 169

   55 else_part: ELSE statement .

    $default  reduce using rule 55 (else_part)


state 170

   46 statement: FOR ID ASSIGNOP expression TO expression . DO statement

    DO  shift, and go to state 172


state 171

   23 period: period ',' NUM DOTDOT NUM .

    $default  reduce using rule 23 (period)


state 172

   46 statement: FOR ID ASSIGNOP expression TO expression DO . statement

    error  shift, and go to state 49
    ID     shift, and go to state 50
    BEGIN  shift, and go to state 31
    IF     shift, and go to state 51
    FOR    shift, and go to state 52

    END   reduce using rule 47 (statement)
    ELSE  reduce using rule 47 (statement)
    ';'   reduce using rule 47 (statement)

    compound_statement  go to state 53
    statement           go to state 173
    variable            go to state 56
    procedure_call      go to state 57


state 173

   46 statement: FOR ID ASSIGNOP expression TO expression DO statement .

    $default  reduce using rule 46 (statement)
