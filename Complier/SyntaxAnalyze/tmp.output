State 150 conflicts: 1 shift/reduce
State 153 conflicts: 1 shift/reduce


Grammar

    0 $accept: programstruct $end

    1 programstruct: program_head ';' program_body '.'

    2 program_head: PROGRAM ID
    3             | error
    4             | PROGRAM error

    5 program_body: const_declarations var_declarations subprogram_declarations compound_statement
    6             | error const_declarations var_declarations subprogram_declarations compound_statement

    7 const_declarations: CONST const_declaration ';'
    8                   | /* empty */

    9 const_declaration: const_declaration ';' ID EQU const_value
   10                  | ID EQU const_value
   11                  | error

   12 const_value: ADD NUM
   13            | SUB NUM
   14            | NUM

   15 var_declarations: VAR var_declaration ';'
   16                 | /* empty */

   17 var_declaration: var_declaration ';' idlist ':' type
   18                | idlist ':' type
   19                | error

   20 idlist: idlist ',' ID
   21       | ID
   22       | error

   23 type: simple_type
   24     | ARRAY '[' period ']' OF simple_type
   25     | error

   26 simple_type: INTEGER
   27            | REAL
   28            | BOOLEAN
   29            | CHAR

   30 period: period ',' NUM DOTDOT NUM
   31       | NUM DOTDOT NUM

   32 subprogram_declarations: subprogram_declarations subprogram ';'
   33                        | /* empty */

   34 subprogram: subprogram_head ';' subprogram_body

   35 subprogram_head: PROCEDURE ID formal_parameter
   36                | FUNCTION ID formal_parameter ':' simple_type
   37                | PROCEDURE error
   38                | FUNCTION error

   39 formal_parameter: '(' parameter_list ')'
   40                 | /* empty */

   41 parameter_list: parameter_list ';' parameter
   42               | parameter

   43 parameter: var_parameter
   44          | value_parameter

   45 var_parameter: VAR value_parameter

   46 value_parameter: idlist ':' simple_type

   47 subprogram_body: const_declarations var_declarations compound_statement
   48                | error const_declarations var_declarations compound_statement

   49 compound_statement: BEGIN statement_list END

   50 statement_list: statement_list ';' statement
   51               | statement

   52 statement: variable ASSIGNOP expression
   53          | procedure_call
   54          | compound_statement
   55          | IF expression THEN statement else_part
   56          | IF error THEN statement else_part
   57          | FOR ID ASSIGNOP expression TO expression DO statement
   58          | FOR ID ASSIGNOP error TO expression DO statement
   59          | FOR ID ASSIGNOP expression TO error DO statement
   60          | FOR ID ASSIGNOP error TO error DO statement
   61          | /* empty */
   62          | error

   63 variable: ID id_varpart

   64 id_varpart: '[' expression_list ']'
   65           | /* empty */

   66 procedure_call: ID
   67               | ID '(' expression_list ')'

   68 else_part: ELSE statement
   69          | /* empty */

   70 expression_list: expression_list ',' expression
   71                | expression
   72                | error

   73 expression: simple_expression EQU simple_expression
   74           | simple_expression NEQU simple_expression
   75           | simple_expression GRETTER simple_expression
   76           | simple_expression EGRETTER simple_expression
   77           | simple_expression LESS simple_expression
   78           | simple_expression ELESS simple_expression
   79           | simple_expression

   80 simple_expression: simple_expression ADD term
   81                  | simple_expression OR term
   82                  | simple_expression SUB term
   83                  | term

   84 term: term MUL factor
   85     | term DIV factor
   86     | term IDIV factor
   87     | term AND factor
   88     | term MOD factor
   89     | factor

   90 factor: NUM
   91       | variable
   92       | ID '(' expression_list ')'
   93       | '(' expression ')'
   94       | NOT factor
   95       | SUB factor


Terminals, with rules where they appear

$end (0) 0
'(' (40) 39 67 92 93
')' (41) 39 67 92 93
',' (44) 20 30 70
'.' (46) 1
':' (58) 17 18 36 46
';' (59) 1 7 9 15 17 32 34 41 50
'[' (91) 24 64
']' (93) 24 64
error (256) 3 4 6 11 19 22 25 37 38 48 56 58 59 60 62 72
EQU (258) 9 10 73
NEQU (259) 74
GRETTER (260) 75
EGRETTER (261) 76
LESS (262) 77
ELESS (263) 78
ASSIGNOP (264) 52 57 58 59 60
ADD (265) 12 80
SUB (266) 13 82 95
MUL (267) 84
DIV (268) 85
IDIV (269) 86
AND (270) 87
OR (271) 81
MOD (272) 88
NUM (273) 12 13 14 30 31 90
ID (274) 2 9 10 20 21 35 36 57 58 59 60 63 66 67 92
PROGRAM (275) 2 4
CONST (276) 7
VAR (277) 15 45
PROCEDURE (278) 35 37
FUNCTION (279) 36 38
BEGIN (280) 49
END (281) 49
ARRAY (282) 24
OF (283) 24
IF (284) 55 56
THEN (285) 55 56
ELSE (286) 68
FOR (287) 57 58 59 60
TO (288) 57 58 59 60
DO (289) 57 58 59 60
INTEGER (290) 26
BOOLEAN (291) 28
REAL (292) 27
CHAR (293) 29
DOTDOT (294) 30 31
NOT (295) 94


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
programstruct (50)
    on left: 1, on right: 0
program_head (51)
    on left: 2 3 4, on right: 1
program_body (52)
    on left: 5 6, on right: 1
const_declarations (53)
    on left: 7 8, on right: 5 6 47 48
const_declaration (54)
    on left: 9 10 11, on right: 7 9
const_value (55)
    on left: 12 13 14, on right: 9 10
var_declarations (56)
    on left: 15 16, on right: 5 6 47 48
var_declaration (57)
    on left: 17 18 19, on right: 15 17
idlist (58)
    on left: 20 21 22, on right: 17 18 20 46
type (59)
    on left: 23 24 25, on right: 17 18
simple_type (60)
    on left: 26 27 28 29, on right: 23 24 36 46
period (61)
    on left: 30 31, on right: 24 30
subprogram_declarations (62)
    on left: 32 33, on right: 5 6 32
subprogram (63)
    on left: 34, on right: 32
subprogram_head (64)
    on left: 35 36 37 38, on right: 34
formal_parameter (65)
    on left: 39 40, on right: 35 36
parameter_list (66)
    on left: 41 42, on right: 39 41
parameter (67)
    on left: 43 44, on right: 41 42
var_parameter (68)
    on left: 45, on right: 43
value_parameter (69)
    on left: 46, on right: 44 45
subprogram_body (70)
    on left: 47 48, on right: 34
compound_statement (71)
    on left: 49, on right: 5 6 47 48 54
statement_list (72)
    on left: 50 51, on right: 49 50
statement (73)
    on left: 52 53 54 55 56 57 58 59 60 61 62, on right: 50 51 55 56
    57 58 59 60 68
variable (74)
    on left: 63, on right: 52 91
id_varpart (75)
    on left: 64 65, on right: 63
procedure_call (76)
    on left: 66 67, on right: 53
else_part (77)
    on left: 68 69, on right: 55 56
expression_list (78)
    on left: 70 71 72, on right: 64 67 70 92
expression (79)
    on left: 73 74 75 76 77 78 79, on right: 52 55 57 58 59 70 71 93
simple_expression (80)
    on left: 80 81 82 83, on right: 73 74 75 76 77 78 79 80 81 82
term (81)
    on left: 84 85 86 87 88 89, on right: 80 81 82 83 84 85 86 87 88
factor (82)
    on left: 90 91 92 93 94 95, on right: 84 85 86 87 88 89 94 95


state 0

    0 $accept: . programstruct $end

    error    shift, and go to state 1
    PROGRAM  shift, and go to state 2

    programstruct  go to state 3
    program_head   go to state 4


state 1

    3 program_head: error .

    $default  reduce using rule 3 (program_head)


state 2

    2 program_head: PROGRAM . ID
    4             | PROGRAM . error

    error  shift, and go to state 5
    ID     shift, and go to state 6


state 3

    0 $accept: programstruct . $end

    $end  shift, and go to state 7


state 4

    1 programstruct: program_head . ';' program_body '.'

    ';'  shift, and go to state 8


state 5

    4 program_head: PROGRAM error .

    $default  reduce using rule 4 (program_head)


state 6

    2 program_head: PROGRAM ID .

    $default  reduce using rule 2 (program_head)


state 7

    0 $accept: programstruct $end .

    $default  accept


state 8

    1 programstruct: program_head ';' . program_body '.'

    error  shift, and go to state 9
    CONST  shift, and go to state 10

    VAR        reduce using rule 8 (const_declarations)
    PROCEDURE  reduce using rule 8 (const_declarations)
    FUNCTION   reduce using rule 8 (const_declarations)
    BEGIN      reduce using rule 8 (const_declarations)

    program_body        go to state 11
    const_declarations  go to state 12


state 9

    6 program_body: error . const_declarations var_declarations subprogram_declarations compound_statement

    CONST  shift, and go to state 10

    $default  reduce using rule 8 (const_declarations)

    const_declarations  go to state 13


state 10

    7 const_declarations: CONST . const_declaration ';'

    error  shift, and go to state 14
    ID     shift, and go to state 15

    const_declaration  go to state 16


state 11

    1 programstruct: program_head ';' program_body . '.'

    '.'  shift, and go to state 17


state 12

    5 program_body: const_declarations . var_declarations subprogram_declarations compound_statement

    VAR  shift, and go to state 18

    $default  reduce using rule 16 (var_declarations)

    var_declarations  go to state 19


state 13

    6 program_body: error const_declarations . var_declarations subprogram_declarations compound_statement

    VAR  shift, and go to state 18

    $default  reduce using rule 16 (var_declarations)

    var_declarations  go to state 20


state 14

   11 const_declaration: error .

    $default  reduce using rule 11 (const_declaration)


state 15

   10 const_declaration: ID . EQU const_value

    EQU  shift, and go to state 21


state 16

    7 const_declarations: CONST const_declaration . ';'
    9 const_declaration: const_declaration . ';' ID EQU const_value

    ';'  shift, and go to state 22


state 17

    1 programstruct: program_head ';' program_body '.' .

    $default  reduce using rule 1 (programstruct)


state 18

   15 var_declarations: VAR . var_declaration ';'

    error  shift, and go to state 23
    ID     shift, and go to state 24

    var_declaration  go to state 25
    idlist           go to state 26


state 19

    5 program_body: const_declarations var_declarations . subprogram_declarations compound_statement

    $default  reduce using rule 33 (subprogram_declarations)

    subprogram_declarations  go to state 27


state 20

    6 program_body: error const_declarations var_declarations . subprogram_declarations compound_statement

    $default  reduce using rule 33 (subprogram_declarations)

    subprogram_declarations  go to state 28


state 21

   10 const_declaration: ID EQU . const_value

    ADD  shift, and go to state 29
    SUB  shift, and go to state 30
    NUM  shift, and go to state 31

    const_value  go to state 32


state 22

    7 const_declarations: CONST const_declaration ';' .
    9 const_declaration: const_declaration ';' . ID EQU const_value

    ID  shift, and go to state 33

    $default  reduce using rule 7 (const_declarations)


state 23

   19 var_declaration: error .
   22 idlist: error .

    ';'       reduce using rule 19 (var_declaration)
    $default  reduce using rule 22 (idlist)


state 24

   21 idlist: ID .

    $default  reduce using rule 21 (idlist)


state 25

   15 var_declarations: VAR var_declaration . ';'
   17 var_declaration: var_declaration . ';' idlist ':' type

    ';'  shift, and go to state 34


state 26

   18 var_declaration: idlist . ':' type
   20 idlist: idlist . ',' ID

    ':'  shift, and go to state 35
    ','  shift, and go to state 36


state 27

    5 program_body: const_declarations var_declarations subprogram_declarations . compound_statement
   32 subprogram_declarations: subprogram_declarations . subprogram ';'

    PROCEDURE  shift, and go to state 37
    FUNCTION   shift, and go to state 38
    BEGIN      shift, and go to state 39

    subprogram          go to state 40
    subprogram_head     go to state 41
    compound_statement  go to state 42


state 28

    6 program_body: error const_declarations var_declarations subprogram_declarations . compound_statement
   32 subprogram_declarations: subprogram_declarations . subprogram ';'

    PROCEDURE  shift, and go to state 37
    FUNCTION   shift, and go to state 38
    BEGIN      shift, and go to state 39

    subprogram          go to state 40
    subprogram_head     go to state 41
    compound_statement  go to state 43


state 29

   12 const_value: ADD . NUM

    NUM  shift, and go to state 44


state 30

   13 const_value: SUB . NUM

    NUM  shift, and go to state 45


state 31

   14 const_value: NUM .

    $default  reduce using rule 14 (const_value)


state 32

   10 const_declaration: ID EQU const_value .

    $default  reduce using rule 10 (const_declaration)


state 33

    9 const_declaration: const_declaration ';' ID . EQU const_value

    EQU  shift, and go to state 46


state 34

   15 var_declarations: VAR var_declaration ';' .
   17 var_declaration: var_declaration ';' . idlist ':' type

    error  shift, and go to state 47
    ID     shift, and go to state 24

    PROCEDURE  reduce using rule 15 (var_declarations)
    FUNCTION   reduce using rule 15 (var_declarations)
    BEGIN      reduce using rule 15 (var_declarations)

    idlist  go to state 48


state 35

   18 var_declaration: idlist ':' . type

    error    shift, and go to state 49
    ARRAY    shift, and go to state 50
    INTEGER  shift, and go to state 51
    BOOLEAN  shift, and go to state 52
    REAL     shift, and go to state 53
    CHAR     shift, and go to state 54

    type         go to state 55
    simple_type  go to state 56


state 36

   20 idlist: idlist ',' . ID

    ID  shift, and go to state 57


state 37

   35 subprogram_head: PROCEDURE . ID formal_parameter
   37                | PROCEDURE . error

    error  shift, and go to state 58
    ID     shift, and go to state 59


state 38

   36 subprogram_head: FUNCTION . ID formal_parameter ':' simple_type
   38                | FUNCTION . error

    error  shift, and go to state 60
    ID     shift, and go to state 61


state 39

   49 compound_statement: BEGIN . statement_list END

    error  shift, and go to state 62
    ID     shift, and go to state 63
    BEGIN  shift, and go to state 39
    IF     shift, and go to state 64
    FOR    shift, and go to state 65

    END  reduce using rule 61 (statement)
    ';'  reduce using rule 61 (statement)

    compound_statement  go to state 66
    statement_list      go to state 67
    statement           go to state 68
    variable            go to state 69
    procedure_call      go to state 70


state 40

   32 subprogram_declarations: subprogram_declarations subprogram . ';'

    ';'  shift, and go to state 71


state 41

   34 subprogram: subprogram_head . ';' subprogram_body

    ';'  shift, and go to state 72


state 42

    5 program_body: const_declarations var_declarations subprogram_declarations compound_statement .

    $default  reduce using rule 5 (program_body)


state 43

    6 program_body: error const_declarations var_declarations subprogram_declarations compound_statement .

    $default  reduce using rule 6 (program_body)


state 44

   12 const_value: ADD NUM .

    $default  reduce using rule 12 (const_value)


state 45

   13 const_value: SUB NUM .

    $default  reduce using rule 13 (const_value)


state 46

    9 const_declaration: const_declaration ';' ID EQU . const_value

    ADD  shift, and go to state 29
    SUB  shift, and go to state 30
    NUM  shift, and go to state 31

    const_value  go to state 73


state 47

   22 idlist: error .

    $default  reduce using rule 22 (idlist)


state 48

   17 var_declaration: var_declaration ';' idlist . ':' type
   20 idlist: idlist . ',' ID

    ':'  shift, and go to state 74
    ','  shift, and go to state 36


state 49

   25 type: error .

    $default  reduce using rule 25 (type)


state 50

   24 type: ARRAY . '[' period ']' OF simple_type

    '['  shift, and go to state 75


state 51

   26 simple_type: INTEGER .

    $default  reduce using rule 26 (simple_type)


state 52

   28 simple_type: BOOLEAN .

    $default  reduce using rule 28 (simple_type)


state 53

   27 simple_type: REAL .

    $default  reduce using rule 27 (simple_type)


state 54

   29 simple_type: CHAR .

    $default  reduce using rule 29 (simple_type)


state 55

   18 var_declaration: idlist ':' type .

    $default  reduce using rule 18 (var_declaration)


state 56

   23 type: simple_type .

    $default  reduce using rule 23 (type)


state 57

   20 idlist: idlist ',' ID .

    $default  reduce using rule 20 (idlist)


state 58

   37 subprogram_head: PROCEDURE error .

    $default  reduce using rule 37 (subprogram_head)


state 59

   35 subprogram_head: PROCEDURE ID . formal_parameter

    '('  shift, and go to state 76

    $default  reduce using rule 40 (formal_parameter)

    formal_parameter  go to state 77


state 60

   38 subprogram_head: FUNCTION error .

    $default  reduce using rule 38 (subprogram_head)


state 61

   36 subprogram_head: FUNCTION ID . formal_parameter ':' simple_type

    '('  shift, and go to state 76

    $default  reduce using rule 40 (formal_parameter)

    formal_parameter  go to state 78


state 62

   62 statement: error .

    $default  reduce using rule 62 (statement)


state 63

   63 variable: ID . id_varpart
   66 procedure_call: ID .
   67               | ID . '(' expression_list ')'

    '['  shift, and go to state 79
    '('  shift, and go to state 80

    ASSIGNOP  reduce using rule 65 (id_varpart)
    $default  reduce using rule 66 (procedure_call)

    id_varpart  go to state 81


state 64

   55 statement: IF . expression THEN statement else_part
   56          | IF . error THEN statement else_part

    error  shift, and go to state 82
    SUB    shift, and go to state 83
    NUM    shift, and go to state 84
    ID     shift, and go to state 85
    NOT    shift, and go to state 86
    '('    shift, and go to state 87

    variable           go to state 88
    expression         go to state 89
    simple_expression  go to state 90
    term               go to state 91
    factor             go to state 92


state 65

   57 statement: FOR . ID ASSIGNOP expression TO expression DO statement
   58          | FOR . ID ASSIGNOP error TO expression DO statement
   59          | FOR . ID ASSIGNOP expression TO error DO statement
   60          | FOR . ID ASSIGNOP error TO error DO statement

    ID  shift, and go to state 93


state 66

   54 statement: compound_statement .

    $default  reduce using rule 54 (statement)


state 67

   49 compound_statement: BEGIN statement_list . END
   50 statement_list: statement_list . ';' statement

    END  shift, and go to state 94
    ';'  shift, and go to state 95


state 68

   51 statement_list: statement .

    $default  reduce using rule 51 (statement_list)


state 69

   52 statement: variable . ASSIGNOP expression

    ASSIGNOP  shift, and go to state 96


state 70

   53 statement: procedure_call .

    $default  reduce using rule 53 (statement)


state 71

   32 subprogram_declarations: subprogram_declarations subprogram ';' .

    $default  reduce using rule 32 (subprogram_declarations)


state 72

   34 subprogram: subprogram_head ';' . subprogram_body

    error  shift, and go to state 97
    CONST  shift, and go to state 10

    VAR    reduce using rule 8 (const_declarations)
    BEGIN  reduce using rule 8 (const_declarations)

    const_declarations  go to state 98
    subprogram_body     go to state 99


state 73

    9 const_declaration: const_declaration ';' ID EQU const_value .

    $default  reduce using rule 9 (const_declaration)


state 74

   17 var_declaration: var_declaration ';' idlist ':' . type

    error    shift, and go to state 49
    ARRAY    shift, and go to state 50
    INTEGER  shift, and go to state 51
    BOOLEAN  shift, and go to state 52
    REAL     shift, and go to state 53
    CHAR     shift, and go to state 54

    type         go to state 100
    simple_type  go to state 56


state 75

   24 type: ARRAY '[' . period ']' OF simple_type

    NUM  shift, and go to state 101

    period  go to state 102


state 76

   39 formal_parameter: '(' . parameter_list ')'

    error  shift, and go to state 47
    ID     shift, and go to state 24
    VAR    shift, and go to state 103

    idlist           go to state 104
    parameter_list   go to state 105
    parameter        go to state 106
    var_parameter    go to state 107
    value_parameter  go to state 108


state 77

   35 subprogram_head: PROCEDURE ID formal_parameter .

    $default  reduce using rule 35 (subprogram_head)


state 78

   36 subprogram_head: FUNCTION ID formal_parameter . ':' simple_type

    ':'  shift, and go to state 109


state 79

   64 id_varpart: '[' . expression_list ']'

    error  shift, and go to state 110
    SUB    shift, and go to state 83
    NUM    shift, and go to state 84
    ID     shift, and go to state 85
    NOT    shift, and go to state 86
    '('    shift, and go to state 87

    variable           go to state 88
    expression_list    go to state 111
    expression         go to state 112
    simple_expression  go to state 90
    term               go to state 91
    factor             go to state 92


state 80

   67 procedure_call: ID '(' . expression_list ')'

    error  shift, and go to state 110
    SUB    shift, and go to state 83
    NUM    shift, and go to state 84
    ID     shift, and go to state 85
    NOT    shift, and go to state 86
    '('    shift, and go to state 87

    variable           go to state 88
    expression_list    go to state 113
    expression         go to state 112
    simple_expression  go to state 90
    term               go to state 91
    factor             go to state 92


state 81

   63 variable: ID id_varpart .

    $default  reduce using rule 63 (variable)


state 82

   56 statement: IF error . THEN statement else_part

    THEN  shift, and go to state 114


state 83

   95 factor: SUB . factor

    SUB  shift, and go to state 83
    NUM  shift, and go to state 84
    ID   shift, and go to state 85
    NOT  shift, and go to state 86
    '('  shift, and go to state 87

    variable  go to state 88
    factor    go to state 115


state 84

   90 factor: NUM .

    $default  reduce using rule 90 (factor)


state 85

   63 variable: ID . id_varpart
   92 factor: ID . '(' expression_list ')'

    '['  shift, and go to state 79
    '('  shift, and go to state 116

    $default  reduce using rule 65 (id_varpart)

    id_varpart  go to state 81


state 86

   94 factor: NOT . factor

    SUB  shift, and go to state 83
    NUM  shift, and go to state 84
    ID   shift, and go to state 85
    NOT  shift, and go to state 86
    '('  shift, and go to state 87

    variable  go to state 88
    factor    go to state 117


state 87

   93 factor: '(' . expression ')'

    SUB  shift, and go to state 83
    NUM  shift, and go to state 84
    ID   shift, and go to state 85
    NOT  shift, and go to state 86
    '('  shift, and go to state 87

    variable           go to state 88
    expression         go to state 118
    simple_expression  go to state 90
    term               go to state 91
    factor             go to state 92


state 88

   91 factor: variable .

    $default  reduce using rule 91 (factor)


state 89

   55 statement: IF expression . THEN statement else_part

    THEN  shift, and go to state 119


state 90

   73 expression: simple_expression . EQU simple_expression
   74           | simple_expression . NEQU simple_expression
   75           | simple_expression . GRETTER simple_expression
   76           | simple_expression . EGRETTER simple_expression
   77           | simple_expression . LESS simple_expression
   78           | simple_expression . ELESS simple_expression
   79           | simple_expression .
   80 simple_expression: simple_expression . ADD term
   81                  | simple_expression . OR term
   82                  | simple_expression . SUB term

    EQU       shift, and go to state 120
    NEQU      shift, and go to state 121
    GRETTER   shift, and go to state 122
    EGRETTER  shift, and go to state 123
    LESS      shift, and go to state 124
    ELESS     shift, and go to state 125
    ADD       shift, and go to state 126
    SUB       shift, and go to state 127
    OR        shift, and go to state 128

    $default  reduce using rule 79 (expression)


state 91

   83 simple_expression: term .
   84 term: term . MUL factor
   85     | term . DIV factor
   86     | term . IDIV factor
   87     | term . AND factor
   88     | term . MOD factor

    MUL   shift, and go to state 129
    DIV   shift, and go to state 130
    IDIV  shift, and go to state 131
    AND   shift, and go to state 132
    MOD   shift, and go to state 133

    $default  reduce using rule 83 (simple_expression)


state 92

   89 term: factor .

    $default  reduce using rule 89 (term)


state 93

   57 statement: FOR ID . ASSIGNOP expression TO expression DO statement
   58          | FOR ID . ASSIGNOP error TO expression DO statement
   59          | FOR ID . ASSIGNOP expression TO error DO statement
   60          | FOR ID . ASSIGNOP error TO error DO statement

    ASSIGNOP  shift, and go to state 134


state 94

   49 compound_statement: BEGIN statement_list END .

    $default  reduce using rule 49 (compound_statement)


state 95

   50 statement_list: statement_list ';' . statement

    error  shift, and go to state 62
    ID     shift, and go to state 63
    BEGIN  shift, and go to state 39
    IF     shift, and go to state 64
    FOR    shift, and go to state 65

    END  reduce using rule 61 (statement)
    ';'  reduce using rule 61 (statement)

    compound_statement  go to state 66
    statement           go to state 135
    variable            go to state 69
    procedure_call      go to state 70


state 96

   52 statement: variable ASSIGNOP . expression

    SUB  shift, and go to state 83
    NUM  shift, and go to state 84
    ID   shift, and go to state 85
    NOT  shift, and go to state 86
    '('  shift, and go to state 87

    variable           go to state 88
    expression         go to state 136
    simple_expression  go to state 90
    term               go to state 91
    factor             go to state 92


state 97

   48 subprogram_body: error . const_declarations var_declarations compound_statement

    CONST  shift, and go to state 10

    $default  reduce using rule 8 (const_declarations)

    const_declarations  go to state 137


state 98

   47 subprogram_body: const_declarations . var_declarations compound_statement

    VAR  shift, and go to state 18

    $default  reduce using rule 16 (var_declarations)

    var_declarations  go to state 138


state 99

   34 subprogram: subprogram_head ';' subprogram_body .

    $default  reduce using rule 34 (subprogram)


state 100

   17 var_declaration: var_declaration ';' idlist ':' type .

    $default  reduce using rule 17 (var_declaration)


state 101

   31 period: NUM . DOTDOT NUM

    DOTDOT  shift, and go to state 139


state 102

   24 type: ARRAY '[' period . ']' OF simple_type
   30 period: period . ',' NUM DOTDOT NUM

    ','  shift, and go to state 140
    ']'  shift, and go to state 141


state 103

   45 var_parameter: VAR . value_parameter

    error  shift, and go to state 47
    ID     shift, and go to state 24

    idlist           go to state 104
    value_parameter  go to state 142


state 104

   20 idlist: idlist . ',' ID
   46 value_parameter: idlist . ':' simple_type

    ':'  shift, and go to state 143
    ','  shift, and go to state 36


state 105

   39 formal_parameter: '(' parameter_list . ')'
   41 parameter_list: parameter_list . ';' parameter

    ';'  shift, and go to state 144
    ')'  shift, and go to state 145


state 106

   42 parameter_list: parameter .

    $default  reduce using rule 42 (parameter_list)


state 107

   43 parameter: var_parameter .

    $default  reduce using rule 43 (parameter)


state 108

   44 parameter: value_parameter .

    $default  reduce using rule 44 (parameter)


state 109

   36 subprogram_head: FUNCTION ID formal_parameter ':' . simple_type

    INTEGER  shift, and go to state 51
    BOOLEAN  shift, and go to state 52
    REAL     shift, and go to state 53
    CHAR     shift, and go to state 54

    simple_type  go to state 146


state 110

   72 expression_list: error .

    $default  reduce using rule 72 (expression_list)


state 111

   64 id_varpart: '[' expression_list . ']'
   70 expression_list: expression_list . ',' expression

    ','  shift, and go to state 147
    ']'  shift, and go to state 148


state 112

   71 expression_list: expression .

    $default  reduce using rule 71 (expression_list)


state 113

   67 procedure_call: ID '(' expression_list . ')'
   70 expression_list: expression_list . ',' expression

    ','  shift, and go to state 147
    ')'  shift, and go to state 149


state 114

   56 statement: IF error THEN . statement else_part

    error  shift, and go to state 62
    ID     shift, and go to state 63
    BEGIN  shift, and go to state 39
    IF     shift, and go to state 64
    FOR    shift, and go to state 65

    END   reduce using rule 61 (statement)
    ELSE  reduce using rule 61 (statement)
    ';'   reduce using rule 61 (statement)

    compound_statement  go to state 66
    statement           go to state 150
    variable            go to state 69
    procedure_call      go to state 70


state 115

   95 factor: SUB factor .

    $default  reduce using rule 95 (factor)


state 116

   92 factor: ID '(' . expression_list ')'

    error  shift, and go to state 110
    SUB    shift, and go to state 83
    NUM    shift, and go to state 84
    ID     shift, and go to state 85
    NOT    shift, and go to state 86
    '('    shift, and go to state 87

    variable           go to state 88
    expression_list    go to state 151
    expression         go to state 112
    simple_expression  go to state 90
    term               go to state 91
    factor             go to state 92


state 117

   94 factor: NOT factor .

    $default  reduce using rule 94 (factor)


state 118

   93 factor: '(' expression . ')'

    ')'  shift, and go to state 152


state 119

   55 statement: IF expression THEN . statement else_part

    error  shift, and go to state 62
    ID     shift, and go to state 63
    BEGIN  shift, and go to state 39
    IF     shift, and go to state 64
    FOR    shift, and go to state 65

    END   reduce using rule 61 (statement)
    ELSE  reduce using rule 61 (statement)
    ';'   reduce using rule 61 (statement)

    compound_statement  go to state 66
    statement           go to state 153
    variable            go to state 69
    procedure_call      go to state 70


state 120

   73 expression: simple_expression EQU . simple_expression

    SUB  shift, and go to state 83
    NUM  shift, and go to state 84
    ID   shift, and go to state 85
    NOT  shift, and go to state 86
    '('  shift, and go to state 87

    variable           go to state 88
    simple_expression  go to state 154
    term               go to state 91
    factor             go to state 92


state 121

   74 expression: simple_expression NEQU . simple_expression

    SUB  shift, and go to state 83
    NUM  shift, and go to state 84
    ID   shift, and go to state 85
    NOT  shift, and go to state 86
    '('  shift, and go to state 87

    variable           go to state 88
    simple_expression  go to state 155
    term               go to state 91
    factor             go to state 92


state 122

   75 expression: simple_expression GRETTER . simple_expression

    SUB  shift, and go to state 83
    NUM  shift, and go to state 84
    ID   shift, and go to state 85
    NOT  shift, and go to state 86
    '('  shift, and go to state 87

    variable           go to state 88
    simple_expression  go to state 156
    term               go to state 91
    factor             go to state 92


state 123

   76 expression: simple_expression EGRETTER . simple_expression

    SUB  shift, and go to state 83
    NUM  shift, and go to state 84
    ID   shift, and go to state 85
    NOT  shift, and go to state 86
    '('  shift, and go to state 87

    variable           go to state 88
    simple_expression  go to state 157
    term               go to state 91
    factor             go to state 92


state 124

   77 expression: simple_expression LESS . simple_expression

    SUB  shift, and go to state 83
    NUM  shift, and go to state 84
    ID   shift, and go to state 85
    NOT  shift, and go to state 86
    '('  shift, and go to state 87

    variable           go to state 88
    simple_expression  go to state 158
    term               go to state 91
    factor             go to state 92


state 125

   78 expression: simple_expression ELESS . simple_expression

    SUB  shift, and go to state 83
    NUM  shift, and go to state 84
    ID   shift, and go to state 85
    NOT  shift, and go to state 86
    '('  shift, and go to state 87

    variable           go to state 88
    simple_expression  go to state 159
    term               go to state 91
    factor             go to state 92


state 126

   80 simple_expression: simple_expression ADD . term

    SUB  shift, and go to state 83
    NUM  shift, and go to state 84
    ID   shift, and go to state 85
    NOT  shift, and go to state 86
    '('  shift, and go to state 87

    variable  go to state 88
    term      go to state 160
    factor    go to state 92


state 127

   82 simple_expression: simple_expression SUB . term

    SUB  shift, and go to state 83
    NUM  shift, and go to state 84
    ID   shift, and go to state 85
    NOT  shift, and go to state 86
    '('  shift, and go to state 87

    variable  go to state 88
    term      go to state 161
    factor    go to state 92


state 128

   81 simple_expression: simple_expression OR . term

    SUB  shift, and go to state 83
    NUM  shift, and go to state 84
    ID   shift, and go to state 85
    NOT  shift, and go to state 86
    '('  shift, and go to state 87

    variable  go to state 88
    term      go to state 162
    factor    go to state 92


state 129

   84 term: term MUL . factor

    SUB  shift, and go to state 83
    NUM  shift, and go to state 84
    ID   shift, and go to state 85
    NOT  shift, and go to state 86
    '('  shift, and go to state 87

    variable  go to state 88
    factor    go to state 163


state 130

   85 term: term DIV . factor

    SUB  shift, and go to state 83
    NUM  shift, and go to state 84
    ID   shift, and go to state 85
    NOT  shift, and go to state 86
    '('  shift, and go to state 87

    variable  go to state 88
    factor    go to state 164


state 131

   86 term: term IDIV . factor

    SUB  shift, and go to state 83
    NUM  shift, and go to state 84
    ID   shift, and go to state 85
    NOT  shift, and go to state 86
    '('  shift, and go to state 87

    variable  go to state 88
    factor    go to state 165


state 132

   87 term: term AND . factor

    SUB  shift, and go to state 83
    NUM  shift, and go to state 84
    ID   shift, and go to state 85
    NOT  shift, and go to state 86
    '('  shift, and go to state 87

    variable  go to state 88
    factor    go to state 166


state 133

   88 term: term MOD . factor

    SUB  shift, and go to state 83
    NUM  shift, and go to state 84
    ID   shift, and go to state 85
    NOT  shift, and go to state 86
    '('  shift, and go to state 87

    variable  go to state 88
    factor    go to state 167


state 134

   57 statement: FOR ID ASSIGNOP . expression TO expression DO statement
   58          | FOR ID ASSIGNOP . error TO expression DO statement
   59          | FOR ID ASSIGNOP . expression TO error DO statement
   60          | FOR ID ASSIGNOP . error TO error DO statement

    error  shift, and go to state 168
    SUB    shift, and go to state 83
    NUM    shift, and go to state 84
    ID     shift, and go to state 85
    NOT    shift, and go to state 86
    '('    shift, and go to state 87

    variable           go to state 88
    expression         go to state 169
    simple_expression  go to state 90
    term               go to state 91
    factor             go to state 92


state 135

   50 statement_list: statement_list ';' statement .

    $default  reduce using rule 50 (statement_list)


state 136

   52 statement: variable ASSIGNOP expression .

    $default  reduce using rule 52 (statement)


state 137

   48 subprogram_body: error const_declarations . var_declarations compound_statement

    VAR  shift, and go to state 18

    $default  reduce using rule 16 (var_declarations)

    var_declarations  go to state 170


state 138

   47 subprogram_body: const_declarations var_declarations . compound_statement

    BEGIN  shift, and go to state 39

    compound_statement  go to state 171


state 139

   31 period: NUM DOTDOT . NUM

    NUM  shift, and go to state 172


state 140

   30 period: period ',' . NUM DOTDOT NUM

    NUM  shift, and go to state 173


state 141

   24 type: ARRAY '[' period ']' . OF simple_type

    OF  shift, and go to state 174


state 142

   45 var_parameter: VAR value_parameter .

    $default  reduce using rule 45 (var_parameter)


state 143

   46 value_parameter: idlist ':' . simple_type

    INTEGER  shift, and go to state 51
    BOOLEAN  shift, and go to state 52
    REAL     shift, and go to state 53
    CHAR     shift, and go to state 54

    simple_type  go to state 175


state 144

   41 parameter_list: parameter_list ';' . parameter

    error  shift, and go to state 47
    ID     shift, and go to state 24
    VAR    shift, and go to state 103

    idlist           go to state 104
    parameter        go to state 176
    var_parameter    go to state 107
    value_parameter  go to state 108


state 145

   39 formal_parameter: '(' parameter_list ')' .

    $default  reduce using rule 39 (formal_parameter)


state 146

   36 subprogram_head: FUNCTION ID formal_parameter ':' simple_type .

    $default  reduce using rule 36 (subprogram_head)


state 147

   70 expression_list: expression_list ',' . expression

    SUB  shift, and go to state 83
    NUM  shift, and go to state 84
    ID   shift, and go to state 85
    NOT  shift, and go to state 86
    '('  shift, and go to state 87

    variable           go to state 88
    expression         go to state 177
    simple_expression  go to state 90
    term               go to state 91
    factor             go to state 92


state 148

   64 id_varpart: '[' expression_list ']' .

    $default  reduce using rule 64 (id_varpart)


state 149

   67 procedure_call: ID '(' expression_list ')' .

    $default  reduce using rule 67 (procedure_call)


state 150

   56 statement: IF error THEN statement . else_part

    ELSE  shift, and go to state 178

    ELSE      [reduce using rule 69 (else_part)]
    $default  reduce using rule 69 (else_part)

    else_part  go to state 179


state 151

   70 expression_list: expression_list . ',' expression
   92 factor: ID '(' expression_list . ')'

    ','  shift, and go to state 147
    ')'  shift, and go to state 180


state 152

   93 factor: '(' expression ')' .

    $default  reduce using rule 93 (factor)


state 153

   55 statement: IF expression THEN statement . else_part

    ELSE  shift, and go to state 178

    ELSE      [reduce using rule 69 (else_part)]
    $default  reduce using rule 69 (else_part)

    else_part  go to state 181


state 154

   73 expression: simple_expression EQU simple_expression .
   80 simple_expression: simple_expression . ADD term
   81                  | simple_expression . OR term
   82                  | simple_expression . SUB term

    ADD  shift, and go to state 126
    SUB  shift, and go to state 127
    OR   shift, and go to state 128

    $default  reduce using rule 73 (expression)


state 155

   74 expression: simple_expression NEQU simple_expression .
   80 simple_expression: simple_expression . ADD term
   81                  | simple_expression . OR term
   82                  | simple_expression . SUB term

    ADD  shift, and go to state 126
    SUB  shift, and go to state 127
    OR   shift, and go to state 128

    $default  reduce using rule 74 (expression)


state 156

   75 expression: simple_expression GRETTER simple_expression .
   80 simple_expression: simple_expression . ADD term
   81                  | simple_expression . OR term
   82                  | simple_expression . SUB term

    ADD  shift, and go to state 126
    SUB  shift, and go to state 127
    OR   shift, and go to state 128

    $default  reduce using rule 75 (expression)


state 157

   76 expression: simple_expression EGRETTER simple_expression .
   80 simple_expression: simple_expression . ADD term
   81                  | simple_expression . OR term
   82                  | simple_expression . SUB term

    ADD  shift, and go to state 126
    SUB  shift, and go to state 127
    OR   shift, and go to state 128

    $default  reduce using rule 76 (expression)


state 158

   77 expression: simple_expression LESS simple_expression .
   80 simple_expression: simple_expression . ADD term
   81                  | simple_expression . OR term
   82                  | simple_expression . SUB term

    ADD  shift, and go to state 126
    SUB  shift, and go to state 127
    OR   shift, and go to state 128

    $default  reduce using rule 77 (expression)


state 159

   78 expression: simple_expression ELESS simple_expression .
   80 simple_expression: simple_expression . ADD term
   81                  | simple_expression . OR term
   82                  | simple_expression . SUB term

    ADD  shift, and go to state 126
    SUB  shift, and go to state 127
    OR   shift, and go to state 128

    $default  reduce using rule 78 (expression)


state 160

   80 simple_expression: simple_expression ADD term .
   84 term: term . MUL factor
   85     | term . DIV factor
   86     | term . IDIV factor
   87     | term . AND factor
   88     | term . MOD factor

    MUL   shift, and go to state 129
    DIV   shift, and go to state 130
    IDIV  shift, and go to state 131
    AND   shift, and go to state 132
    MOD   shift, and go to state 133

    $default  reduce using rule 80 (simple_expression)


state 161

   82 simple_expression: simple_expression SUB term .
   84 term: term . MUL factor
   85     | term . DIV factor
   86     | term . IDIV factor
   87     | term . AND factor
   88     | term . MOD factor

    MUL   shift, and go to state 129
    DIV   shift, and go to state 130
    IDIV  shift, and go to state 131
    AND   shift, and go to state 132
    MOD   shift, and go to state 133

    $default  reduce using rule 82 (simple_expression)


state 162

   81 simple_expression: simple_expression OR term .
   84 term: term . MUL factor
   85     | term . DIV factor
   86     | term . IDIV factor
   87     | term . AND factor
   88     | term . MOD factor

    MUL   shift, and go to state 129
    DIV   shift, and go to state 130
    IDIV  shift, and go to state 131
    AND   shift, and go to state 132
    MOD   shift, and go to state 133

    $default  reduce using rule 81 (simple_expression)


state 163

   84 term: term MUL factor .

    $default  reduce using rule 84 (term)


state 164

   85 term: term DIV factor .

    $default  reduce using rule 85 (term)


state 165

   86 term: term IDIV factor .

    $default  reduce using rule 86 (term)


state 166

   87 term: term AND factor .

    $default  reduce using rule 87 (term)


state 167

   88 term: term MOD factor .

    $default  reduce using rule 88 (term)


state 168

   58 statement: FOR ID ASSIGNOP error . TO expression DO statement
   60          | FOR ID ASSIGNOP error . TO error DO statement

    TO  shift, and go to state 182


state 169

   57 statement: FOR ID ASSIGNOP expression . TO expression DO statement
   59          | FOR ID ASSIGNOP expression . TO error DO statement

    TO  shift, and go to state 183


state 170

   48 subprogram_body: error const_declarations var_declarations . compound_statement

    BEGIN  shift, and go to state 39

    compound_statement  go to state 184


state 171

   47 subprogram_body: const_declarations var_declarations compound_statement .

    $default  reduce using rule 47 (subprogram_body)


state 172

   31 period: NUM DOTDOT NUM .

    $default  reduce using rule 31 (period)


state 173

   30 period: period ',' NUM . DOTDOT NUM

    DOTDOT  shift, and go to state 185


state 174

   24 type: ARRAY '[' period ']' OF . simple_type

    INTEGER  shift, and go to state 51
    BOOLEAN  shift, and go to state 52
    REAL     shift, and go to state 53
    CHAR     shift, and go to state 54

    simple_type  go to state 186


state 175

   46 value_parameter: idlist ':' simple_type .

    $default  reduce using rule 46 (value_parameter)


state 176

   41 parameter_list: parameter_list ';' parameter .

    $default  reduce using rule 41 (parameter_list)


state 177

   70 expression_list: expression_list ',' expression .

    $default  reduce using rule 70 (expression_list)


state 178

   68 else_part: ELSE . statement

    error  shift, and go to state 62
    ID     shift, and go to state 63
    BEGIN  shift, and go to state 39
    IF     shift, and go to state 64
    FOR    shift, and go to state 65

    END   reduce using rule 61 (statement)
    ELSE  reduce using rule 61 (statement)
    ';'   reduce using rule 61 (statement)

    compound_statement  go to state 66
    statement           go to state 187
    variable            go to state 69
    procedure_call      go to state 70


state 179

   56 statement: IF error THEN statement else_part .

    $default  reduce using rule 56 (statement)


state 180

   92 factor: ID '(' expression_list ')' .

    $default  reduce using rule 92 (factor)


state 181

   55 statement: IF expression THEN statement else_part .

    $default  reduce using rule 55 (statement)


state 182

   58 statement: FOR ID ASSIGNOP error TO . expression DO statement
   60          | FOR ID ASSIGNOP error TO . error DO statement

    error  shift, and go to state 188
    SUB    shift, and go to state 83
    NUM    shift, and go to state 84
    ID     shift, and go to state 85
    NOT    shift, and go to state 86
    '('    shift, and go to state 87

    variable           go to state 88
    expression         go to state 189
    simple_expression  go to state 90
    term               go to state 91
    factor             go to state 92


state 183

   57 statement: FOR ID ASSIGNOP expression TO . expression DO statement
   59          | FOR ID ASSIGNOP expression TO . error DO statement

    error  shift, and go to state 190
    SUB    shift, and go to state 83
    NUM    shift, and go to state 84
    ID     shift, and go to state 85
    NOT    shift, and go to state 86
    '('    shift, and go to state 87

    variable           go to state 88
    expression         go to state 191
    simple_expression  go to state 90
    term               go to state 91
    factor             go to state 92


state 184

   48 subprogram_body: error const_declarations var_declarations compound_statement .

    $default  reduce using rule 48 (subprogram_body)


state 185

   30 period: period ',' NUM DOTDOT . NUM

    NUM  shift, and go to state 192


state 186

   24 type: ARRAY '[' period ']' OF simple_type .

    $default  reduce using rule 24 (type)


state 187

   68 else_part: ELSE statement .

    $default  reduce using rule 68 (else_part)


state 188

   60 statement: FOR ID ASSIGNOP error TO error . DO statement

    DO  shift, and go to state 193


state 189

   58 statement: FOR ID ASSIGNOP error TO expression . DO statement

    DO  shift, and go to state 194


state 190

   59 statement: FOR ID ASSIGNOP expression TO error . DO statement

    DO  shift, and go to state 195


state 191

   57 statement: FOR ID ASSIGNOP expression TO expression . DO statement

    DO  shift, and go to state 196


state 192

   30 period: period ',' NUM DOTDOT NUM .

    $default  reduce using rule 30 (period)


state 193

   60 statement: FOR ID ASSIGNOP error TO error DO . statement

    error  shift, and go to state 62
    ID     shift, and go to state 63
    BEGIN  shift, and go to state 39
    IF     shift, and go to state 64
    FOR    shift, and go to state 65

    END   reduce using rule 61 (statement)
    ELSE  reduce using rule 61 (statement)
    ';'   reduce using rule 61 (statement)

    compound_statement  go to state 66
    statement           go to state 197
    variable            go to state 69
    procedure_call      go to state 70


state 194

   58 statement: FOR ID ASSIGNOP error TO expression DO . statement

    error  shift, and go to state 62
    ID     shift, and go to state 63
    BEGIN  shift, and go to state 39
    IF     shift, and go to state 64
    FOR    shift, and go to state 65

    END   reduce using rule 61 (statement)
    ELSE  reduce using rule 61 (statement)
    ';'   reduce using rule 61 (statement)

    compound_statement  go to state 66
    statement           go to state 198
    variable            go to state 69
    procedure_call      go to state 70


state 195

   59 statement: FOR ID ASSIGNOP expression TO error DO . statement

    error  shift, and go to state 62
    ID     shift, and go to state 63
    BEGIN  shift, and go to state 39
    IF     shift, and go to state 64
    FOR    shift, and go to state 65

    END   reduce using rule 61 (statement)
    ELSE  reduce using rule 61 (statement)
    ';'   reduce using rule 61 (statement)

    compound_statement  go to state 66
    statement           go to state 199
    variable            go to state 69
    procedure_call      go to state 70


state 196

   57 statement: FOR ID ASSIGNOP expression TO expression DO . statement

    error  shift, and go to state 62
    ID     shift, and go to state 63
    BEGIN  shift, and go to state 39
    IF     shift, and go to state 64
    FOR    shift, and go to state 65

    END   reduce using rule 61 (statement)
    ELSE  reduce using rule 61 (statement)
    ';'   reduce using rule 61 (statement)

    compound_statement  go to state 66
    statement           go to state 200
    variable            go to state 69
    procedure_call      go to state 70


state 197

   60 statement: FOR ID ASSIGNOP error TO error DO statement .

    $default  reduce using rule 60 (statement)


state 198

   58 statement: FOR ID ASSIGNOP error TO expression DO statement .

    $default  reduce using rule 58 (statement)


state 199

   59 statement: FOR ID ASSIGNOP expression TO error DO statement .

    $default  reduce using rule 59 (statement)


state 200

   57 statement: FOR ID ASSIGNOP expression TO expression DO statement .

    $default  reduce using rule 57 (statement)
